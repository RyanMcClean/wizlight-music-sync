name: Django CI
permissions: write-all
on:
    push:
        branches: ['main']
    pull_request:
    schedule:
        - cron: '0 0 * * *' # Every day at midnight UTC
    workflow_dispatch:

jobs:
    build_and_test:
        name: Build and Test

        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            max-parallel: 4
            matrix:
                python-version: [3.11, 3.12]
                os: [ubutnu-latest, windows-latest]

        steps:
            - name: Checkout repo and submodules
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Install Dependencies
              id: dependencies
              run: |
                  sudo apt install portaudio19-dev
                  python -m pip install --upgrade pip
                  cat ./requirements.txt | sed -e '/^\\s*#.*$/d' -e '/^\\s*$/d' | xargs -n 1 python -m pip install || true 
                  playwright install --with-deps

            - name: Run Migrations
              id: run_migrations
              run: |
                  python manage.py makemigrations bulb_control_frontend --noinput 
                  python manage.py migrate --noinput --run-syncdb

            - name: Lint
              id: lint
              run: |
                  pylint ./ 2>&1 | tee pylint.txt

            - name: Create PyLint Badge
              run: |
                  score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
                  echo "Pylint score was $score"
                  if [ -n "$score" ]; then exit 1; fi
                  anybadge --value=$score --file=test_logs/pylint.svg -l pylint 2=red 4=orange 8=yellow 10=green

            - name: Run Tests
              id: run_tests
              run: |
                  pytest -s 2>&1 | tee pytest.txt

            - name: Create Coverage Badge
              run: |
                  coverage=$(sed -n 's/TOTAL\s*[0-9]\{1,3\}\s*[0-9]\{1,3\}\s*\.*//p' pytest.txt | sed -n 's/.$//p')
                  echo "Coverage was $coverage%"
                  if [ -n "$coverage" ]; then exit 1; fi
                  anybadge --value=$coverage --file=test_logs/coverage.svg -l coverage 0=red 50=orange 80=yellow 100=green

            - name: Publish badges to badges branch
              uses: JamesIves/github-pages-deploy-action@v4
              with:
                  branch: badges
                  folder: test_logs
